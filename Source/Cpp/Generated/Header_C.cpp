// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p15
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "Header_C.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"

#if !defined (__ACE_INLINE__)
#include "Header_C.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_std_msgs_msg_dds__Header_[] =
      {
        { "stamp_", &builtin_interfaces::msg::dds_::_tc_Time_ },
        { "frame_id_", &CORBA::_tc_string }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_std_msgs_msg_dds__Header_ (
  ::CORBA::tk_struct,
  "IDL:std_msgs/msg/dds_/Header_:1.0",
  "Header_",
  _tao_fields_std_msgs_msg_dds__Header_,
  2);


namespace std_msgs
{
  
  namespace msg
  {
    
    namespace dds_
    {
      ::CORBA::TypeCode_ptr const _tc_Header_ =
        &_tao_tc_std_msgs_msg_dds__Header_;
    }
  }
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
std_msgs::msg::dds_::Header_::_tao_any_destructor (
    void *_tao_void_pointer)
{
  Header_ *_tao_tmp_pointer =
    static_cast<Header_ *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace std_msgs
{
  
  namespace msg
  {
    
    namespace dds_
    {
      /// Copying insertion.
      void operator<<= (
          ::CORBA::Any &_tao_any,
          const ::std_msgs::msg::dds_::Header_ &_tao_elem)
      {
        TAO::Any_Dual_Impl_T< ::std_msgs::msg::dds_::Header_>::insert_copy (
            _tao_any,
            ::std_msgs::msg::dds_::Header_::_tao_any_destructor,
            ::std_msgs::msg::dds_::_tc_Header_,
            _tao_elem);
    }

    /// Non-copying insertion.
    void operator<<= (
        ::CORBA::Any &_tao_any, ::
        std_msgs::msg::dds_::Header_ *_tao_elem)
    {
      TAO::Any_Dual_Impl_T< ::std_msgs::msg::dds_::Header_>::insert (
          _tao_any,
          ::std_msgs::msg::dds_::Header_::_tao_any_destructor,
          ::std_msgs::msg::dds_::_tc_Header_,
          _tao_elem);
    }

    /// Extraction to non-const pointer (deprecated).
    ::CORBA::Boolean operator>>= (
        const ::CORBA::Any &_tao_any,
        ::std_msgs::msg::dds_::Header_ *&_tao_elem)
    {
      return _tao_any >>= const_cast<
          const ::std_msgs::msg::dds_::Header_ *&> (
          _tao_elem);
    }

    /// Extraction to const pointer.
    ::CORBA::Boolean operator>>= (
        const ::CORBA::Any &_tao_any,
        const ::std_msgs::msg::dds_::Header_ *&_tao_elem)
    {
      return
        TAO::Any_Dual_Impl_T< ::std_msgs::msg::dds_::Header_>::extract (
            _tao_any,
            ::std_msgs::msg::dds_::Header_::_tao_any_destructor,
            ::std_msgs::msg::dds_::_tc_Header_,
            _tao_elem
          );
    }
  }
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const std_msgs::msg::dds_::Header_ &_tao_elem)
{
  TAO::Any_Dual_Impl_T<std_msgs::msg::dds_::Header_>::insert_copy (
    _tao_any,
    std_msgs::msg::dds_::Header_::_tao_any_destructor,
    std_msgs::msg::dds_::_tc_Header_,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  std_msgs::msg::dds_::Header_ *_tao_elem)
{
  TAO::Any_Dual_Impl_T<std_msgs::msg::dds_::Header_>::insert (
    _tao_any,
    std_msgs::msg::dds_::Header_::_tao_any_destructor,
    std_msgs::msg::dds_::_tc_Header_,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  std_msgs::msg::dds_::Header_ *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const std_msgs::msg::dds_::Header_ *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const std_msgs::msg::dds_::Header_ *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<std_msgs::msg::dds_::Header_>::extract (
      _tao_any,
      std_msgs::msg::dds_::Header_::_tao_any_destructor,
      std_msgs::msg::dds_::_tc_Header_,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const std_msgs::msg::dds_::Header_ &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.stamp_) &&
    (strm << _tao_aggregate.frame_id_.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    std_msgs::msg::dds_::Header_ &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.stamp_) &&
    (strm >> _tao_aggregate.frame_id_.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



